BET:
  output_requirements:
    out_file: [in_file]
    mask_file:
      - [mask: True]
      - [reduce_bias: True]
    outline_file: [outline: True]
    meshfile:
      - [mesh: True]
      - [surfaces: True]
    inskull_mask_file: [surfaces: True]
    inskull_mesh_file: [surfaces: True]
    outskull_mask_file: [surfaces: True]
    outskull_mesh_file: [surfaces: True]
    outskin_mask_file: [surfaces: True]
    outskin_mesh_file: [surfaces: True]
    skull_mask_file: [surfaces: True]
    skull_file: [skull: True]

  output_templates:
    out_file: "{in_file}_brain"
    mask_file: "{out_file}_mask"
    outline_file: "{out_file}_overlay"
    meshfile: "{out_file}_mesh.vtk"
    inskull_mask_file: "{out_file}_inskull_mask"
    inskull_mesh_file: "{out_file}_inskull_mesh"
    outskull_mask_file: "{out_file}_outskull_mask"
    outskull_mesh_file: "{out_file}_outskull_mesh"
    outskin_mask_file: "{out_file}_outskin_mask"
    outskin_mesh_file: "{out_file}_outskin_mesh"
    skull_mask_file: "{out_file}_skull_mask"
    skull_file: "{out_file}_skull"


  doctest:
    in_file: "test.nii.gz"
    out_file: test_brain.nii.gz
    frac: 0.7
    cmdline: 'bet test.nii.gz test_brain.nii.gz -f 0.70'

  tests_inputs:
    -
    - mask: True
    - surfaces: True

  tests_outputs:
    - out_file
    - [out_file, mask_file]
    - [out_file, meshfile, inskull_mask_file, inskull_mesh_file, outskull_mask_file,
       outskull_mesh_file, outskin_mask_file, outskin_mesh_file, skull_mask_file]


FAST:
  inputs_metadata:
    number_classes:
      default: 3

  output_requirements:
    tissue_class_files: [segments: True]
    partial_volume_map: [no_pve: False] # possibly [False, None, attr.NOTHING]
    partial_volume_files: [no_pve: False] # possibly [False, None, attr.NOTHING]
    bias_field: [output_biasfield: True]
    probability_maps: [probability_maps: True]

  output_callables:
    tissue_class_map: FAST_output
    tissue_class_files: FAST_output_nclass
    restored_image: FAST_output_infile
    mixeltype: FAST_output
    partial_volume_map: FAST_output
    partial_volume_files: FAST_output_nclass
    bias_field: FAST_output_infile
    probability_maps: FAST_output_nclass

  doctest:
    in_files: "test.nii.gz"
    out_basename: "fast_"
    cmdline: 'fast -o fast_ -n 3 test.nii.gz'

  tests_inputs:
    -

  tests_outputs:
    - AttributeError


MCFLIRT:
  output_requirements:
    out_file: [in_file]
    variance_img: [in_file, stats_imgs: True]
    std_img: [in_file, stats_imgs: True]
    mean_img: [in_file, mean_vol: True]
    par_file: [save_plots]
#    mat_file:
#    rms_files: [save_rms]


  output_templates:
    out_file: "{in_file}_mcf"
    variance_img: "{out_file}_variance.ext"
    std_img: "{out_file}_sigma.ext"
    mean_img: "{out_file}_mean_reg.ext"
    par_file: "{out_file}.par"
#    mat_file:
#    rms_files:

  tests_inputs:
    -

  tests_outputs:
    - out_file


FLIRT:
  output_requirements:

  output_templates:

  tests_inputs:
    -

  tests_outputs:
    - AttributeError


FNIRT:
  output_requirements:
    warped_file: [in_file]
    field_file: [in_file]
    jacobian_file: [in_file]
    modulatedref_file: [in_file]
    #out_intensitymap_file: [in_file]
    log_file: [in_file]
    fieldcoeff_file: [in_file]


  output_templates:
    warped_file: "{in_file}_warped"
    field_file: "{in_file}_field"
    jacobian_file: "{in_file}_field_jacobian"
    modulatedref_file: "{in_file}_modulated"
    #out_intensitymap_file: "{in_file}_intmap"
    log_file: "{in_file}_log.txt"
    fieldcoeff_file: "{in_file}_fieldwarp"

  tests_inputs:
    -
    - ref_file: f"{in_file}"

  tests_outputs:
    - AttributeError
    - [warped_file, field_file, jacobian_file, modulatedref_file, log_file, fieldcoeff_file]


ApplyWarp:
  output_templates:
    out_file: "{in_file}_warp"

  tests_inputs:
    - ref_file: f"{in_file}"

  tests_outputs:
    - out_file


SliceTimer:
  output_requirements:
    slice_time_corrected_file: [out_file]

  output_templates:
    out_file: "{in_file}_st"
    slice_time_corrected_file: "{out_file}"

  tests_inputs:
    - ref_file: f"{in_file}"

  tests_outputs:
    - [out_file, slice_time_corrected_file]


SUSAN:
  output_requirements:
    smoothed_file: [out_file]

  output_templates:
    out_file: "{in_file}_smooth"
    smoothed_file: "{out_file}"

  tests_inputs:
    -
    -
      brightness_threshold: 0.01
      fwhm: 2

  tests_outputs:
    - AttributeError
    - [out_file, smoothed_file]


PRELUDE:
  output_requirements:
    unwrapped_phase_file: [phase_file]

  output_templates:
    unwrapped_phase_file: "{phase_file}_unwrapped"

  tests_inputs:
    -

  tests_outputs:
    - AttributeError


FIRST:
  output_requirements:
    original_segmentations: [in_file]
    segmentation_file: [in_file]
    vtk_surfaces: [in_file]
    bvars: [in_file]

  output_templates:
    original_segmentations: "{in_file}_original_segmentations"
    segmentation_file: "{in_file}_segmentation_file"
    vtk_surfaces: "{in_file}_vtk_surfaces"
    bvars: "{in_file}_bvars"

  tests_inputs:
    -

  tests_outputs:
    - AttributeError
